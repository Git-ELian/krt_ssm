<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-lazy-init="true">

    <!-- 强制使用cglib代理 -->
    <aop:config proxy-target-class="true" expose-proxy="true"/>

    <!-- 开启aspect注解支持 -->
    <aop:aspectj-autoproxy/>

    <!-- 只扫描除了@Controller的所有注解 -->
    <context:component-scan base-package="com.krt">
        <context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
    </context:component-scan>

    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
            </list>
        </property>
    </bean>

    <!-- quartz定时调度 -->
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" destroy-method="destroy">
        <property name="quartzProperties">
            <props>
                <!-- 禁止检测更新 -->
                <prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
            </props>
        </property>
        <property name="configLocation" value="classpath:quartz.properties"/>
    </bean>


    <!-- 配置验证码 -->
    <!--
    * kaptcha.border  是否有边框  默认为true  我们可以自己设置yes，no
    * kaptcha.border.color   边框颜色   默认为Color.BLACK
    * kaptcha.border.thickness  边框粗细度  默认为1
    * kaptcha.producer.impl   验证码生成器  默认为DefaultKaptcha
    * kaptcha.textproducer.impl   验证码文本生成器  默认为DefaultTextCreator
    * kaptcha.textproducer.char.string   验证码文本字符内容范围  默认为abcde2345678gfynmnpwx
    * kaptcha.textproducer.char.length   验证码文本字符长度  默认为5
    * kaptcha.textproducer.font.names    验证码文本字体样式  默认为new Font("Arial", 1, fontSize), new Font("Courier", 1, fontSize)
    * kaptcha.textproducer.font.size   验证码文本字符大小  默认为40
    * kaptcha.textproducer.font.color  验证码文本字符颜色  默认为Color.BLACK
    * kaptcha.textproducer.char.space  验证码文本字符间距  默认为2
    * kaptcha.noise.impl    验证码噪点生成对象  默认为DefaultNoise
    * kaptcha.noise.color   验证码噪点颜色   默认为Color.BLACK
    * kaptcha.obscurificator.impl   验证码样式引擎  默认为WaterRipple
    * kaptcha.word.impl   验证码文本字符渲染   默认为DefaultWordRenderer
    * kaptcha.background.impl   验证码背景生成器   默认为DefaultBackground
    * kaptcha.background.clear.from   验证码背景颜色渐进   默认为Color.LIGHT_GRAY
    * kaptcha.background.clear.to   验证码背景颜色渐进   默认为Color.WHITE
    * kaptcha.image.width   验证码图片宽度  默认为200
    * kaptcha.image.height  验证码图片高度  默认为50
    -->
    <bean id="producer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">no</prop>
                        <prop key="kaptcha.border.colo">128,128,128</prop>
                        <prop key="kaptcha.textproducer.font.size">40</prop>
                        <prop key="kaptcha.textproducer.font.colo">black</prop>
                        <prop key="kaptcha.textproducer.char.length">5</prop>
                        <prop key="kaptcha.textproducer.char.space">2</prop>
                        <prop key="kaptcha.image.height">200</prop>
                        <prop key="kaptcha.image.height">50</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <!-- 引入其他配置文件 -->
    <import resource="classpath:spring/spring-mybatis.xml"/>
    <import resource="classpath:spring/spring-ehcache.xml"/>
    <import resource="classpath:spring/spring-threadpool.xml"/>
</beans>
